Mosaic simulator in C++, used to simulate Arduino code (with minimal modification) to see results without actual hardware present. 

Make a copy of main.cpp and name it to reflect the pattern it tests.

Only insert code into the "Code to simulate" sections (one for multithreaded code, and another for singlethreaded code, marked out clearly) in {your main}.cpp, run/compile using ./compile_run {your main.cpp} (optionally just run with ./run), where {your main.cpp} is an argument taken in. 

Use "disp.wait({nanoseconds})" to control the speed of your animation.

Terminal outputs fps information. Dynamic performance adjustments are disabled (very broken and unnecessary).



=====STEPS FOR RUNNING SIMULATOR ON WINDOWS 10=====

In short: if you don't have a Mac and ceebs installing Linux on your computer, use these methods.

1. Download Xming - it allows graphical programs to run https://sourceforge.net/projects/xming/

2. Follow these steps to set up Linux Bash Shell on Windows 10. https://www.howtogeek.com/249966/how-to-install-and-use-the-linux-bash-shell-on-windows-10/

3. Once you have finished downloading it, type in all these stuff in the Bash Shell:

sudo apt-get install g++
sudo apt-get install libx11-dev
sudo ln -s /opt/X11/include/X11 /usr/local/include/X11 (I'm not entirely sure if you need this one but I did it anyways)

4. In Bash Shell, go to your correct directory and run these lines of code:

export DISPLAY=:0
g++ -std=c++11 main.cpp -o run -lX11 -lpthread -L/usr/X11/lib -L/usr/X11R6/lib -O4

5. Enter ./a.out and there you have it!

